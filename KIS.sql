DROP TABLE Kocka CASCADE CONSTRAINTS;
--DROP TABLE Hostitel CASCADE CONSTRAINTS;
--DROP TABLE Hracka CASCADE CONSTRAINTS;
--DROP TABLE Teritorium CASCADE CONSTRAINTS;
--DROP TABLE Zivot CASCADE CONSTRAINTS;
--DROP TABLE Probehly_zivot CASCADE CONSTRAINTS;
--DROP TABLE Kocka_Teritorium CASCADE CONSTRAINTS;

CREATE TABLE Kocka (
    ID_vzorku_kuze INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jmeno VARCHAR(50),
    rasa VARCHAR(20),

    PRIMARY KEY (ID_vzorku_kuze)
);

CREATE TABLE Hostitel (
    ID_hostitele INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jmeno VARCHAR(20),
    vek INT,
    pohlavi VARCHAR(20),
    rodne_cislo VARCHAR(10) UNIQUE CONSTRAINT check_rc CHECK (REGEXP_LIKE(rodne_cislo, '^([0–9]{6}/[0–9]{3,4})$')),
    cislo_bankovniho_uctu VARCHAR(255),
    ID_kocky INTEGER,

    PRIMARY KEY (ID_hostitele),
    FOREIGN KEY (ID_kocky) REFERENCES Kocka (ID_vzorku_kuze)
);

CREATE TABLE Hracka (
    ID_hracky INTEGER GENERATED BY DEFAULT AS IDENTITY,
    typ VARCHAR(255),
    barva VARCHAR(255),
    cena DECIMAL(10,2),
    ID_hostitele INT,

    PRIMARY KEY (ID_hracky),
    FOREIGN KEY (ID_hostitele) REFERENCES Hostitel (ID_hostitele)
);

CREATE TABLE Teritorium (
    ID_teritoria INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nazev VARCHAR(255),
    rozloha DECIMAL(10,2),

    PRIMARY KEY (ID_teritoria)
);

CREATE TABLE Zivot (
    ID_zivota INTEGER GENERATED BY DEFAULT AS IDENTITY,
    datum_narozeni DATE,
    cas_narozeni TIMESTAMP,
    ID_kocka INT,
    delka_zivota INT NULL,
    zpusob_smrti varchar(433) NULL,
    ID_teritoria INT NULL ,

    PRIMARY KEY (ID_zivota, ID_kocka),
    FOREIGN KEY (ID_kocka) REFERENCES Kocka (ID_vzorku_kuze),
    foreign key (ID_teritoria) REFERENCES Teritorium (ID_teritoria)
);

CREATE TABLE Kocka_Teritorium (
    ID_kocka INT,
    ID_teritoria INT,
    PRIMARY KEY (ID_kocka, ID_teritoria),
    FOREIGN KEY (ID_kocka) REFERENCES Kocka (ID_vzorku_kuze),
    FOREIGN KEY (ID_teritoria) REFERENCES Teritorium (ID_teritoria)
);

INSERT INTO Kocka (jmeno, rasa)
VALUES
('Micka', 'Muž');
